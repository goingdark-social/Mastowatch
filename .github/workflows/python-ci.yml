name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  python-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v6
      with:
        python-version: "3.14"
        
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt', 'tests/requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt -r tests/requirements-test.txt

    - name: Run checks
      run: make check

  frontend-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Node.js 22
      uses: actions/setup-node@v5
      with:
        node-version: '22'
        
    - name: Cache Node dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Install frontend dependencies and build
      working-directory: ./frontend
      run: |
        npm ci
        npm run build

  build-pr-image:
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'build_pr')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    - name: Build Docker image
      run: docker build -t mastowatch-pr:${{ github.event.pull_request.number }} .
