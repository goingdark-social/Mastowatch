x-backend: &backend
  build: .
  env_file:
    - .env

x-backend-env: &backend-env
  INSTANCE_BASE: "${INSTANCE_BASE}"
  ADMIN_TOKEN: "${ADMIN_TOKEN}"
  BOT_TOKEN: "${BOT_TOKEN}"
  DATABASE_URL: "postgresql+psycopg://mastowatch:mastowatch@db:5432/mastowatch"
  REDIS_URL: "redis://redis:6379/0"
  DRY_RUN: "true"
  MAX_PAGES_PER_POLL: "3"
  MAX_STATUSES_TO_FETCH: "100"
  REPORT_CATEGORY_DEFAULT: "spam"
  FORWARD_REMOTE_REPORTS: "false"
  POLICY_VERSION: "v1"
  API_KEY: "${API_KEY}"
  WEBHOOK_SECRET: "${WEBHOOK_SECRET}"
  CORS_ORIGINS: '["http://localhost:5173"]'

services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: mastowatch
      POSTGRES_USER: mastowatch
      POSTGRES_PASSWORD: mastowatch
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mastowatch -d mastowatch"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:8
    command: ["redis-server", "--appendonly", "yes"]

  api:
    <<: *backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      migrate:
        condition: service_completed_successfully
    environment:
      <<: *backend-env
    ports: ["8080:8080"]
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8080"]

  migrate:
    <<: *backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql+psycopg://mastowatch:mastowatch@db:5432/mastowatch"
    command: ["alembic", "upgrade", "head"]

  worker:
    <<: *backend
    depends_on:
      - api
      - redis
    environment:
      <<: *backend-env
    restart: on-failure
    command: ["celery", "-A", "app.tasks.celery_app", "worker", "--loglevel=INFO", "--concurrency=2"]

  beat:
    <<: *backend
    depends_on:
      - worker
    environment:
      <<: *backend-env
    restart: on-failure
    command: ["celery", "-A", "app.tasks.celery_app", "beat", "--loglevel=INFO"]
