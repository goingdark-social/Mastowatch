# Development overrides for MastoWatch
# 
# For environment variable documentation, see: docs/ENVIRONMENT.md
# 
# This file contains development-specific configurations and safe default values.
# It automatically applies when running `docker-compose up` in development.

services:
  db:
    ports: ["127.0.0.1:5432:5432"]
    environment:
      # Development database credentials (safe for local development)
      POSTGRES_DB: mastowatch
      POSTGRES_USER: mastowatch
      POSTGRES_PASSWORD: mastowatch
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    ports: ["127.0.0.1:6379:6379"]
    volumes:
      - redis_data:/data

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # Development database and Redis
      DATABASE_URL: postgresql+psycopg://mastowatch:mastowatch@db:5432/mastowatch
      REDIS_URL: redis://redis:6379/0
      
      # Development safety settings - see docs/ENVIRONMENT.md
      DRY_RUN: "true"
      PANIC_STOP: "false"
      SKIP_STARTUP_VALIDATION: "false"
      CORS_ORIGINS: '["http://localhost:3000", "http://localhost:5173"]'
      UI_ORIGIN: "${UI_ORIGIN:-http://localhost:5173}"

      # Development tokens (replace with actual values from your test instance)
      INSTANCE_BASE: "${INSTANCE_BASE:-https://your-test-instance.example.com}"
      MASTODON_ACCESS_TOKEN: "${MASTODON_ACCESS_TOKEN:-REPLACE_WITH_ACCESS_TOKEN}"
      MASTODON_CLIENT_KEY: "${MASTODON_CLIENT_KEY:-REPLACE_WITH_CLIENT_KEY}"
      MASTODON_CLIENT_SECRET: "${MASTODON_CLIENT_SECRET:-REPLACE_WITH_CLIENT_SECRET}"
      API_KEY: "${API_KEY:-dev_api_key_change_in_production}"
      WEBHOOK_SECRET: "${WEBHOOK_SECRET:-dev_webhook_secret_change_in_production}"

      # Optional OAuth (uses same Mastodon app credentials from above)
      OAUTH_REDIRECT_URI: "${OAUTH_REDIRECT_URI:-http://localhost:8080/admin/callback}"
      OAUTH_POPUP_REDIRECT_URI: "${OAUTH_POPUP_REDIRECT_URI:-http://localhost:8080/admin/popup-callback}"
      SESSION_SECRET_KEY: "${SESSION_SECRET_KEY:-}"
    volumes:
      - ./backend/app:/app/app
      - ./backend/alembic.ini:/app/alembic.ini
      - ./backend/migrations:/app/migrations
    command: ["uvicorn", "app.main:app", "--reload", "--host", "0.0.0.0", "--port", "8080"]

  worker:
    environment:
      # Development database and Redis
      DATABASE_URL: postgresql+psycopg://mastowatch:mastowatch@db:5432/mastowatch
      REDIS_URL: redis://redis:6379/0
      
      # Development safety settings - see docs/ENVIRONMENT.md
      DRY_RUN: "true"
      PANIC_STOP: "false"

      # Development tokens (inherit from environment or use defaults)
      INSTANCE_BASE: "${INSTANCE_BASE:-https://your-test-instance.example.com}"
      MASTODON_ACCESS_TOKEN: "${MASTODON_ACCESS_TOKEN:-REPLACE_WITH_ACCESS_TOKEN}"
      MASTODON_CLIENT_KEY: "${MASTODON_CLIENT_KEY:-REPLACE_WITH_CLIENT_KEY}"
      API_KEY: "${API_KEY:-dev_api_key_change_in_production}"
      WEBHOOK_SECRET: "${WEBHOOK_SECRET:-dev_webhook_secret_change_in_production}"
      UI_ORIGIN: "${UI_ORIGIN:-http://localhost:5173}"
      
      # OAuth Configuration (uses same Mastodon app credentials from above)
      OAUTH_REDIRECT_URI: "${OAUTH_REDIRECT_URI:-http://localhost:8080/admin/callback}"
      OAUTH_POPUP_REDIRECT_URI: "${OAUTH_POPUP_REDIRECT_URI:-http://localhost:8080/admin/popup-callback}"
      SESSION_SECRET_KEY: "${SESSION_SECRET_KEY:-}"
    volumes:
      - ./backend/app:/app/app
      - ./backend/migrations:/app/migrations

  scheduler:
    environment:
      # Development database and Redis
      DATABASE_URL: postgresql+psycopg://mastowatch:mastowatch@db:5432/mastowatch
      REDIS_URL: redis://redis:6379/0
      
      # Development safety settings - see docs/ENVIRONMENT.md
      DRY_RUN: "true"
      PANIC_STOP: "false"
      
      # Development tokens (inherit from environment or use defaults)
      INSTANCE_BASE: "${INSTANCE_BASE:-https://your-test-instance.example.com}"
      MASTODON_ACCESS_TOKEN: "${MASTODON_ACCESS_TOKEN:-REPLACE_WITH_ACCESS_TOKEN}"
      MASTODON_CLIENT_KEY: "${MASTODON_CLIENT_KEY:-REPLACE_WITH_CLIENT_KEY}"
      API_KEY: "${API_KEY:-dev_api_key_change_in_production}"
      WEBHOOK_SECRET: "${WEBHOOK_SECRET:-dev_webhook_secret_change_in_production}"
      UI_ORIGIN: "${UI_ORIGIN:-http://localhost:5173}"
      
      # OAuth Configuration (uses same Mastodon app credentials from above)
      OAUTH_REDIRECT_URI: "${OAUTH_REDIRECT_URI:-http://localhost:8080/admin/callback}"
      OAUTH_POPUP_REDIRECT_URI: "${OAUTH_POPUP_REDIRECT_URI:-http://localhost:8080/admin/popup-callback}"
      SESSION_SECRET_KEY: "${SESSION_SECRET_KEY:-}"
    volumes:
      - ./backend/app:/app/app
      - ./backend/migrations:/app/migrations

  rq-dashboard:
    environment:
      # Development Redis
      REDIS_URL: redis://redis:6379/0
      RQ_DASHBOARD_REDIS_URL: redis://redis:6379/0

  migrate:
    environment:
      # Development database connection
      DATABASE_URL: postgresql+psycopg://mastowatch:mastowatch@db:5432/mastowatch
      UI_ORIGIN: "${UI_ORIGIN:-http://localhost:5173}"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: runtime-dev
    ports:
      - "127.0.0.1:5173:5173"
    environment:
      - DOCKER_ENV=true
      # Leave VITE_API_URL empty to use Vite proxy in development
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/index.html:/app/index.html
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json

volumes:
  postgres_data:
  redis_data:
