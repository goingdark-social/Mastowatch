[tool.black]
line-length = 120
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "redis.*",
    "alembic.*",
    "prometheus_client.*",
]
ignore_missing_imports = true
[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP", "PL", "D"]
ignore = [
    "D203",  # 1 blank line required before class docstring (conflicts with D211)
    "D213",  # Multi-line docstring summary should start at the second line (conflicts with D212)
]

# Ban manual HTTP libraries project-wide; allow narrow exceptions via per-file-ignores below
[tool.ruff.lint.flake8-tidy-imports.banned-api]
"requests".msg = "Use the generated Mastodon OpenAPI client; no direct HTTP."
"httpx".msg = "Use the generated Mastodon OpenAPI client; no direct HTTP."
"urllib.request".msg = "Use the generated Mastodon OpenAPI client; no direct HTTP."

# If you need to allow these modules in specific files, relax TID251 there:
[tool.ruff.lint.per-file-ignores]
# Example: allow requests in a generic HTTP adapter if you truly need it (not for Mastodon)
"app/integrations/http_adapter.py" = ["TID251"]
"app/main.py" = ["PLR0915"]
